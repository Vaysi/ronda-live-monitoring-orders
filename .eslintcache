[{"/Users/arsalweb/Desktop/avay/live-monitor/src/App.tsx":"1","/Users/arsalweb/Desktop/avay/live-monitor/src/components/tabs.tsx":"2","/Users/arsalweb/Desktop/avay/live-monitor/src/components/reload.tsx":"3","/Users/arsalweb/Desktop/avay/live-monitor/src/themes/light.tsx":"4","/Users/arsalweb/Desktop/avay/live-monitor/src/components/orders-list.tsx":"5"},{"size":3529,"mtime":1609315791278,"results":"6","hashOfConfig":"7"},{"size":3813,"mtime":1609308792398,"results":"8","hashOfConfig":"7"},{"size":1103,"mtime":1609309609933,"results":"9","hashOfConfig":"7"},{"size":432,"mtime":1609315810040,"results":"10","hashOfConfig":"7"},{"size":3748,"mtime":1609315862365,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"a1ja5o",{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/arsalweb/Desktop/avay/live-monitor/src/App.tsx",["23","24","25","26","27","28"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport theme from \"./themes/light\";\nimport { ThemeProvider as MaterialUiProvider } from \"@material-ui/core/styles\";\nimport { StylesProvider } from \"@material-ui/styles\";\nimport Tabs from \"./components/tabs\";\nimport Reload from \"./components/reload\";\nimport { get_orders_list$$ } from \"./utils/api\";\nimport OrdersList from \"./components/orders-list\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport 'vazir-font/dist/Farsi-Digits/font-face-FD.css';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  loading: {\n    margin: \"auto\",\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n}));\n\nexport default function MyApp() {\n  const classes = useStyles();\n\n  const [ordersList, setOrdersList] = useState<any[]>([]);\n  const [visibleList, setVisibleList] = useState<any[]>([]);\n  const [selectedTab, setSelectedTab] = useState<string>(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // Timer\n  const initialMinute = 0,\n    initialSeconds = 15;\n  const [minutes, setMinutes] = useState(initialMinute);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  // Timer Process & Logic\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(myInterval);\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n\n  useEffect(() => {\n    get_orders_list$$((response) => {\n      setOrdersList(Object.values(response.data));\n      setVisibleList(Object.values(response.data));\n      setLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    if(seconds === 0 && minutes === 0){\n      reloadList();\n    }\n  }, [seconds]);\n\n  const clickOnTab = (id: string) => {\n    setSelectedTab(id);\n    switch (id) {\n      case \"new\":\n        setVisibleList(ordersList.filter((item) => item.status == 2));\n        break;\n      case \"edit_confirmed\":\n        setVisibleList(ordersList.filter((item) => item.status == 6));\n        break;\n      case \"edit_request\":\n        setVisibleList(ordersList.filter((item) => item.status == 12));\n        break;\n      case \"sent\":\n        setVisibleList(ordersList.filter((item) => item.status == 7));\n        break;\n      case \"canceled\":\n        setVisibleList(ordersList.filter((item) => item.status == 5));\n        break;\n      default:\n        setVisibleList(ordersList);\n        break;\n    }\n  };\n\n  const reloadList = () => {\n    setLoading(true);\n    get_orders_list$$((response) => {\n      setOrdersList(Object.values(response.data));\n      clickOnTab(selectedTab);\n      setSeconds(15);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <MaterialUiProvider theme={theme}>\n      <StylesProvider injectFirst>\n        <div className={classes.root}>\n          {loading && (\n            <CircularProgress size={80} className={classes.loading} />\n          )}\n          <Tabs list={ordersList} clickOnTab={clickOnTab} />\n          <OrdersList list={visibleList} setList={setVisibleList} />\n          <Reload loading={loading} reload={reloadList} timer={{ minutes, seconds }} />\n        </div>\n      </StylesProvider>\n    </MaterialUiProvider>\n  );\n}\n","/Users/arsalweb/Desktop/avay/live-monitor/src/components/tabs.tsx",["29","30","31","32","33","34","35"],"/Users/arsalweb/Desktop/avay/live-monitor/src/components/reload.tsx",[],"/Users/arsalweb/Desktop/avay/live-monitor/src/themes/light.tsx",[],"/Users/arsalweb/Desktop/avay/live-monitor/src/components/orders-list.tsx",["36","37","38"],{"ruleId":"39","severity":1,"message":"40","line":74,"column":6,"nodeType":"41","endLine":74,"endColumn":15,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":80,"column":64,"nodeType":"45","messageId":"46","endLine":80,"endColumn":66},{"ruleId":"43","severity":1,"message":"44","line":83,"column":64,"nodeType":"45","messageId":"46","endLine":83,"endColumn":66},{"ruleId":"43","severity":1,"message":"44","line":86,"column":64,"nodeType":"45","messageId":"46","endLine":86,"endColumn":66},{"ruleId":"43","severity":1,"message":"44","line":89,"column":64,"nodeType":"45","messageId":"46","endLine":89,"endColumn":66},{"ruleId":"43","severity":1,"message":"44","line":92,"column":64,"nodeType":"45","messageId":"46","endLine":92,"endColumn":66},{"ruleId":"47","severity":1,"message":"48","line":14,"column":10,"nodeType":"49","messageId":"50","endLine":14,"endColumn":27},{"ruleId":"47","severity":1,"message":"51","line":17,"column":11,"nodeType":"49","messageId":"50","endLine":17,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":70,"column":67,"nodeType":"45","messageId":"46","endLine":70,"endColumn":69},{"ruleId":"43","severity":1,"message":"44","line":71,"column":71,"nodeType":"45","messageId":"46","endLine":71,"endColumn":73},{"ruleId":"43","severity":1,"message":"44","line":73,"column":69,"nodeType":"45","messageId":"46","endLine":73,"endColumn":71},{"ruleId":"43","severity":1,"message":"44","line":75,"column":62,"nodeType":"45","messageId":"46","endLine":75,"endColumn":64},{"ruleId":"43","severity":1,"message":"44","line":76,"column":66,"nodeType":"45","messageId":"46","endLine":76,"endColumn":68},{"ruleId":"47","severity":1,"message":"52","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":3,"column":20,"nodeType":"49","messageId":"50","endLine":3,"endColumn":26},{"ruleId":"47","severity":1,"message":"54","line":3,"column":28,"nodeType":"49","messageId":"50","endLine":3,"endColumn":45},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'minutes' and 'reloadList'. Either include them or remove the dependency array.","ArrayExpression",["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'get_orders_list$$' is defined but never used.","Identifier","unusedVar","'TabPanelProps' is defined but never used.","'DataGrid' is defined but never used.","'ColDef' is defined but never used.","'ValueGetterParams' is defined but never used.",{"desc":"56","fix":"57"},"Update the dependencies array to be: [minutes, reloadList, seconds]",{"range":"58","text":"59"},[2056,2065],"[minutes, reloadList, seconds]"]